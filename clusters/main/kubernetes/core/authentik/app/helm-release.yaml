apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: authentik
  namespace: authentik
spec:
  interval: 15m
  chart:
    spec:
      chart: authentik
      version: 33.2.0
      sourceRef:
        kind: HelmRepository
        name: truecharts
        namespace: flux-system
      interval: 15m
  timeout: 20m
  maxHistory: 3
  driftDetection:
    mode: warn
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:

    TZ: America/Chicago

    credentials:
      cloudflare:
        type: s3
        url: "${S3URL}"
        bucket: "${S3PREFIX}"
        accessKey: "${S3ID}"
        secretKey: "${S3SECRET}"
        encrKey: "${S3ENCR}"

    authentik:
      credentials:
        # Only works on initial install
        email: ${AUTHENTIKLOGIN}
        password: ${AUTHENTIKPASS}
        # Optional, only set if you want to use it
        bootstrapToken: ""
      general:
        disableUpdateCheck: false
        disableStartupAnalytics: true
        allowUserChangeName: true
        allowUserChangeEmail: true
        allowUserChangeUsername: true
        overwriteDefaultBlueprints: false
        gdprCompliance: true
        tokenLength: 128
        impersonation: true
        avatars:
          - gravatar
          - initials
        footerLinks:
          - name: Authentik
            href: https://${DOMAIN_0}
      email:
        host: ${SMTP}
        port: 25
        username: ${PROTONLOGIN}
        password: ${PROTONPASS}
        useTLS: false
        useSSL: false
        timeout: 10
        from: ""
      ldap:
        tlsCiphers: "null"
        taskTimeoutHours: 2
      logging:
        # info, debug, warning, error, trace
        logLevel: info
      errorReporting:
        enabled: false
        sendPII: false
        environment: customer
        sentryDSN: ""
      geoip:
        enabled: false
        # Ignored if enabled is true
        # If enabled is false, and this is true, the
        # built-in GeoIP database will be wiped
        wipeBuiltInDb: false
        editionID: GeoLite2-City
        frequency: 8
        accountID: ""
        licenseKey: ""
      outposts:
        proxy:
          enabled: false
          token: ${AUTHENTIKPROXY}
        radius:
          enabled: false
          token: ${AUTHENTIKRAD}
        ldap:
          enabled: true
          token: ${AUTHENTIKLDAP}
    
    ingress:
      main:
        required: true
        enabled: true
        ingressClassName: internal
        hosts:
          - host: authentik.${DOMAIN_0}
            paths:
              - path: /
                pathType: Prefix
        integrations:
          traefik:
            enabled: false
          certManager:
            enabled: true
            certificateIssuer: domain-0-le-prod

    persistence:
      media:
        accessModes:
          - ReadWriteMany
        volsync:
          - name: config
            type: restic
            credentials: cloudflare
            dest:
              enabled: true
            src:
              enabled: true

      templates:
        accessModes:
          - ReadWriteMany
        volsync:
          - name: templates
            type: restic
            credentials: cloudflare
            dest:
              enabled: true
            src:
              enabled: true

      blueprints:
        accessModes:
          - ReadWriteMany
        volsync:
          - name: blueprints
            type: restic
            credentials: cloudflare
            dest:
              enabled: true
            src:
              enabled: true

      certs:
        accessModes:
          - ReadWriteMany
        volsync:
          - name: certs
            type: restic
            credentials: cloudflare
            dest:
              enabled: true
            src:
              enabled: true

      geoip:
        accessModes:
          - ReadWriteMany
        volsync:
          - name: geoip
            type: restic
            credentials: cloudflare
            dest:
              enabled: true
            src:
              enabled: true

    cnpg:
      main:
        enabled: true
        mode: recovery
        cluster:
          singleNode: true
        user: authentik
        #password: "${AUTHENTIK_DATABASE}"
        database: authentik
        pgVersion: 15
        backups:
          enabled: false
          credentials: cloudflare
          scheduledBackups:
            - name: daily-backup
              schedule: "0 0 21 * * *"
              backupOwnerReference: self
              immediate: true
              suspend: false           
          retentionPolicy: "7d"
        recovery:
          method: object_store
          revision: "1"
          credentials: cloudflare
