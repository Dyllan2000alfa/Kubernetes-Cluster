apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
    name: authentik
    namespace: authentik
spec:
    interval: 15m
    chart:
        spec:
            chart: authentik
            version: 27.8.2
            sourceRef:
                kind: HelmRepository
                name: truecharts
                namespace: flux-system
            interval: 15m
    timeout: 20m
    maxHistory: 3
    driftDetection:
        mode: warn
    install:
        createNamespace: true
        remediation:
            retries: 3
    upgrade:
        cleanupOnFail: true
        remediation:
            retries: 3
    uninstall:
        keepHistory: false
    values:
        TZ: America/Chicago
        authentik:
            credentials:
                # Only works on initial install
                email: dyllan@tinoco.casa
                password: ENC[AES256_GCM,data:H+95BmVzDBSUx/Q=,iv:hD+8XuNyDtPEqKvgvzi4sdoZdVx7Y7+IUZRsCq2ypnI=,tag:fn5AHs6c523ElyFZldbsPA==,type:str]
                # Optional, only set if you want to use it
                bootstrapToken: ""
            credentials:
                cloudflare:
                    accessKey: ${S3_access}
                    bucket: app-backup
                    encrKey: ${S3_encr}
                    name: cloudflare
                    path: ""
                    secretKey: ${S3_secret}
                    type: s3
                    url: ${S3_url}
            general:
                disableUpdateCheck: false
                disableStartupAnalytics: true
                allowUserChangeName: true
                allowUserChangeEmail: true
                allowUserChangeUsername: true
                overwriteDefaultBlueprints: false
                gdprCompliance: true
                tokenLength: 128
                impersonation: true
                avatars:
                    - gravatar
                    - initials
                footerLinks:
                    - name: Authentik
                      href: https://goauthentik.io
            email:
                host: protonmail-bridge.protonmail-bridge.svc.cluster.local
                port: 25
                username: primary@tinoco.casa
                password: null
                useTLS: false
                useSSL: false
                timeout: 10
                from: ""
            ldap:
                tlsCiphers: "null"
                taskTimeoutHours: 2
            logging:
                # info, debug, warning, error, trace
                logLevel: info
            errorReporting:
                enabled: false
                sendPII: false
                environment: customer
                sentryDSN: ""
            geoip:
                enabled: false
                # Ignored if enabled is true
                # If enabled is false, and this is true, the
                # built-in GeoIP database will be wiped
                wipeBuiltInDb: false
                editionID: GeoLite2-City
                frequency: 8
                accountID: ""
                licenseKey: ""
            outposts:
                proxy:
                    enabled: false
                    token: ""
                radius:
                    enabled: false
                    token: ""
                ldap:
                    enabled: true
                    token: jeUuHoUvs7A2gLaqBKsDCODes1kr0q2dPgbBujg0AlwBzHIpUDkoEhtg4kbfB7fpWdRYIQupJFDUmFnniQEJnV58ihouo7qP3Is2HhOmVAR2NpQxGxxoPILJongrNeTZ
        # ===== DO NOT EDIT BELOW THIS LINE =====
        workload:
            # ===== Server =====
            main:
                enabled: true
                type: Deployment
                podSpec:
                    containers:
                        main:
                            enabled: true
                            primary: true
                            imageSelector: image
                            securityContext:
                                runAsUser: 1000
                                runAsGroup: 1000
                                # readOnlyRootFilesystem: false
                            envFrom:
                                - configMapRef:
                                    name: server
                                - secretRef:
                                    name: server-worker
                                - configMapRef:
                                    name: server-worker
                            args:
                                - server
                            probes:
                                liveness:
                                    enabled: true
                                    type: exec
                                    command:
                                        - /lifecycle/ak
                                        - healthcheck
                                readiness:
                                    enabled: true
                                    type: exec
                                    command:
                                        - /lifecycle/ak
                                        - healthcheck
                                startup:
                                    enabled: true
                                    type: exec
                                    command:
                                        - /lifecycle/ak
                                        - healthcheck
            # ===== Worker =====
            worker:
                enabled: true
                type: Deployment
                podSpec:
                    containers:
                        worker:
                            enabled: true
                            primary: true
                            imageSelector: image
                            securityContext:
                                runAsUser: 1000
                                runAsGroup: 1000
                                # readOnlyRootFilesystem: false
                            envFrom:
                                - secretRef:
                                    name: server-worker
                                - configMapRef:
                                    name: server-worker
                            args:
                                - worker
                            probes:
                                liveness:
                                    enabled: true
                                    type: exec
                                    command:
                                        - /lifecycle/ak
                                        - healthcheck
                                readiness:
                                    enabled: true
                                    type: exec
                                    command:
                                        - /lifecycle/ak
                                        - healthcheck
                                startup:
                                    enabled: true
                                    type: exec
                                    command:
                                        - /lifecycle/ak
                                        - healthcheck
            # ===== PROXY =====
            proxy:
                enabled: true
                type: Deployment
                podSpec:
                    containers:
                        proxy:
                            enabled: true
                            primary: true
                            imageSelector: proxyImage
                            securityContext:
                                runAsUser: 1000
                                runAsGroup: 1000
                            envFrom:
                                - configMapRef:
                                    name: proxy
                                - secretRef:
                                    name: proxy
                            probes:
                                liveness:
                                    enabled: true
                                    type: exec
                                    command:
                                        - /proxy
                                        - healthcheck
                                readiness:
                                    enabled: true
                                    type: exec
                                    command:
                                        - /proxy
                                        - healthcheck
                                startup:
                                    enabled: true
                                    type: exec
                                    command:
                                        - /proxy
                                        - healthcheck
            # ===== RADIUS =====
            radius:
                enabled: true
                type: Deployment
                podSpec:
                    containers:
                        radius:
                            enabled: true
                            primary: true
                            imageSelector: radiusImage
                            securityContext:
                                runAsUser: 1000
                                runAsGroup: 1000
                            envFrom:
                                - configMapRef:
                                    name: radius
                                - secretRef:
                                    name: radius
                            probes:
                                liveness:
                                    enabled: true
                                    type: exec
                                    command:
                                        - /radius
                                        - healthcheck
                                readiness:
                                    enabled: true
                                    type: exec
                                    command:
                                        - /radius
                                        - healthcheck
                                startup:
                                    enabled: true
                                    type: exec
                                    command:
                                        - /radius
                                        - healthcheck
            # ===== LDAP =====
            ldap:
                enabled: true
                type: Deployment
                podSpec:
                    containers:
                        ldap:
                            enabled: true
                            primary: true
                            imageSelector: ldapImage
                            securityContext:
                                runAsUser: 1000
                                runAsGroup: 1000
                            envFrom:
                                - configMapRef:
                                    name: ldap
                                - secretRef:
                                    name: ldap
                            probes:
                                liveness:
                                    enabled: true
                                    type: exec
                                    command:
                                        - /ldap
                                        - healthcheck
                                readiness:
                                    enabled: true
                                    type: exec
                                    command:
                                        - /ldap
                                        - healthcheck
                                startup:
                                    enabled: true
                                    type: exec
                                    command:
                                        - /ldap
                                        - healthcheck
            # ===== GeoIP Updater =====
            geoip:
                enabled: true
                type: Deployment
                podSpec:
                    containers:
                        geoip:
                            enabled: true
                            primary: true
                            imageSelector: geoipImage
                            securityContext:
                                runAsUser: 0
                                runAsGroup: 0
                                capabilities:
                                    disableS6Caps: true
                            envFrom:
                                - configMapRef:
                                    name: geoip
                                - secretRef:
                                    name: geoip
                            probes:
                                liveness:
                                    enabled: false
                                readiness:
                                    enabled: false
                                startup:
                                    enabled: false
        service:
            # Server HTTPS
            main:
                ports:
                    main:
                        protocol: https
                        port: 10229
            # Server HTTP
            http:
                enabled: true
                type: ClusterIP
                ports:
                    http:
                        enabled: true
                        protocol: http
                        port: 10230
            # Proxy
            proxy:
                enabled: true
                targetSelector: proxy
                ports:
                    http:
                        enabled: true
                        protocol: http
                        port: 10227
                        targetSelector: proxy
                    https:
                        enabled: true
                        protocol: https
                        port: 10228
                        targetSelector: proxy
            # Radius
            radius:
                enabled: true
                targetSelector: radius
                ports:
                    radius:
                        enabled: true
                        protocol: udp
                        targetSelector: radius
                        port: 1812
            # LDAP
            ldap:
                enabled: true
                targetSelector: ldap
                ports:
                    ldap:
                        enabled: true
                        port: 389
                        targetSelector: ldap
            # LDAPS
            ldaps:
                enabled: true
                targetSelector: ldap
                ports:
                    ldaps:
                        enabled: true
                        port: 636
                        targetSelector: ldap
            # Server Metrics
            servermetrics:
                enabled: true
                type: ClusterIP
                ports:
                    servermetrics:
                        enabled: true
                        protocol: http
                        port: 10231
            # Radius Metrics
            radiusmetrics:
                enabled: true
                type: ClusterIP
                targetSelector: radius
                ports:
                    radiusmetrics:
                        enabled: true
                        protocol: http
                        port: 10232
                        targetSelector: radius
            # LDAP Metrics
            ldapmetrics:
                enabled: true
                type: ClusterIP
                targetSelector: ldap
                ports:
                    ldapmetrics:
                        enabled: true
                        protocol: http
                        port: 10233
                        targetSelector: ldap
            # Proxy Metrics
            proxymetrics:
                enabled: true
                type: ClusterIP
                targetSelector: proxy
                ports:
                    proxymetrics:
                        enabled: true
                        protocol: http
                        port: 10234
                        targetSelector: proxy
        persistence:
            media:
                enabled: true
                targetSelector:
                    main:
                        main:
                            mountPath: /media
                    worker:
                        worker:
                            mountPath: /media
                volsync:
                    - credentials: cloudflare
                      dest:
                        enabled: false
                      name: config
                      src:
                        enabled: true
                      type: restic
            templates:
                enabled: true
                targetSelector:
                    main:
                        main:
                            mountPath: /templates
                    worker:
                        worker:
                            mountPath: /templates
                volsync:
                    - credentials: cloudflare
                      dest:
                        enabled: false
                      name: templates
                      src:
                        enabled: true
                      type: restic
            blueprints:
                enabled: true
                targetSelector:
                    worker:
                        worker:
                            # This will automatically change to `/blueprints`
                            # if `overwriteDefaultBlueprints` is set to `true
                            # Otherwise it will respect the value specified here
                            mountPath: /blueprints/custom
                volsync:
                    - credentials: cloudflare
                      dest:
                        enabled: false
                      name: blueprints
                      src:
                        enabled: true
                      type: restic
            certs:
                enabled: true
                mountPath: /certs
                targetSelector:
                    worker:
                        worker:
                            mountPath: /certs
                volsync:
                    - credentials: cloudflare
                      dest:
                        enabled: false
                      name: certs
                      src:
                        enabled: true
                      type: restic
            geoip:
                enabled: true
                targetSelector:
                    main:
                        main:
                            mountPath: /geoip
                    worker:
                        worker:
                            mountPath: /geoip
                    geoip:
                        geoip:
                            mountPath: /usr/share/GeoIP
        cnpg:
            main:
                enabled: true
                user: authentik
                database: authentik
        redis:
            enabled: true
            includeCommon: true
        portal:
            open:
                enabled: true
        metrics:
            # FIXME: Metrics do not work yet
            servermetrics:
                enabled: true
                type: servicemonitor
                endpoints:
                    - port: '{{ .Values.service.servermetrics.ports.servermetrics.port }}'
                      path: /metrics
                prometheusRule:
                    enabled: false
            radiusmetrics:
                enabled: true
                type: servicemonitor
                endpoints:
                    - port: '{{ .Values.service.radiusmetrics.ports.radiusmetrics.port }}'
                      path: /metrics
                prometheusRule:
                    enabled: false
            ldapmetrics:
                enabled: true
                type: servicemonitor
                endpoints:
                    - port: '{{ .Values.service.ldapmetrics.ports.ldapmetrics.port }}'
                      path: /metrics
                prometheusRule:
                    enabled: false
            proxymetrics:
                enabled: true
                type: servicemonitor
                endpoints:
                    - port: '{{ .Values.service.proxymetrics.ports.proxymetrics.port }}'
                      path: /metrics
                prometheusRule:
                    enabled: false
        updated: true
        ingress:
            main:
                required: true
                enabled: true
                hosts:
                    - host: authentik.tinoco.casa
                      paths:
                        - path: /
                          pathType: Prefix
                integrations:
                    certManager:
                        enabled: true
                        certificateIssuer: cloudflare
                    traefik:
                        allowCors: false
                        enabled: true
                        entrypoints:
                            - websecure
sops:
    shamir_threshold: 3
    kms: []
    gcp_kms: []
    azure_kv: []
    hc_vault: []
    age:
        - recipient: age1agltukf6ellg2guets9gq4th2nmunc965uflry7fdahtj7ea8uxq8q54ae
          enc: |
            -----BEGIN AGE ENCRYPTED FILE-----
            YWdlLWVuY3J5cHRpb24ub3JnL3YxCi0+IFgyNTUxOSBOamtBT2MxNWp0U201R3Nu
            L3dXZGp6NnRQamFnTy9scGpnQlJGbmhDSWxnCjl6TDVmZUJVRStjS2NwdDg1Y3hO
            bWxRNE5iaCt5TzdRM0ZiRVQxSlhmeDQKLS0tIHNadDNVRmZTZlRnaHhLR0NFR3d6
            UlhuRzZuZ0N0M2ZJeDlQdU5KSUt4MnMKU3IvXWwPhkuEOsBliSxFAQV9P8BDeY4M
            xm/33CHChfapaJgy6Ks2GYtPNPcZK8I3JFkNW+INw60ZkJpjJIHNJw==
            -----END AGE ENCRYPTED FILE-----
    lastmodified: "2024-11-08T18:59:04Z"
    mac: ENC[AES256_GCM,data:sjXhwGMa9PAt0WgAwoXvVlkwoWE2VG9wCqUMeLQmhgXuRK/vq3xt9w1v8yII4R5q8X7RZTiAKBC3R+1jW0jmciHtgrfReIUOu+SPOpJEOGyKpGemt6rX5Jep94/e/n3HnNMby7Ht4B94RZgAtPhVi6JGiglXCX1p8WZy7rb2uFw=,iv:QzPrgebf6RWR+Rb7uBat/+fpejpoWlCTxA7HZPNT74I=,tag:i5m2n8w1lNC1MHU5uMDVRg==,type:str]
    pgp: []
    encrypted_regex: ((?i)(password))
    version: 3.9.1
